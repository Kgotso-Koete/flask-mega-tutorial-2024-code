version: '3.8'

services:
  mysql:
    image: mysql:latest
    container_name: mysql
    env_file:
      - .env
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
      MYSQL_DATABASE: microblog
      MYSQL_USER: microblog
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - microblog-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:latest
    container_name: redis
    # Remove external port mapping to avoid conflicts with host Redis
    # ports:
    #   - "6379:6379"
    networks:
      - microblog-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - xpack.security.enrollment.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
      - bootstrap.memory_lock=true
    ports:
      - "9200:9200"
    networks:
      - microblog-network
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 60s

  web:
    build: .
    container_name: microblog
    env_file:
      - .env
    ports:
      - "8000:5000"
    environment:
      SECRET_KEY: ${SECRET_KEY}
      MAIL_SERVER: ${MAIL_SERVER}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USE_TLS: ${MAIL_USE_TLS}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      DATABASE_URL: mysql+pymysql://microblog:${DATABASE_PASSWORD}@mysql/microblog
      ELASTICSEARCH_URL: http://elasticsearch:9200
      REDIS_URL: redis://redis:6379/0
      MS_TRANSLATOR_KEY: ${MS_TRANSLATOR_KEY}
    networks:
      - microblog-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  rq-worker:
    build: .
    container_name: rq-worker
    env_file:
      - .env
    environment:
      SECRET_KEY: ${SECRET_KEY}
      MAIL_SERVER: ${MAIL_SERVER}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USE_TLS: ${MAIL_USE_TLS}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      DATABASE_URL: mysql+pymysql://microblog:${DATABASE_PASSWORD}@mysql/microblog
      REDIS_URL: redis://redis:6379/0
    entrypoint: ["venv/bin/rq", "worker", "-u", "redis://redis:6379/0", "microblog-tasks"]
    networks:
      - microblog-network
    depends_on:
      - redis
      - web

volumes:
  mysql_data:

networks:
  microblog-network:
    driver: bridge